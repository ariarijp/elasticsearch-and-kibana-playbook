- hosts: all
  sudo: yes
  vars:
    elasticsearch_version: 2.0.0
    kibana_version: 4.2.0
  tasks:
    - name: "OpenJDKとunzipをインストール"
      apt: name={{ item }} install_recommends=False update_cache=yes cache_valid_time=300
      with_items:
        - openjdk-7-jre-headless
        - unzip
    - name: "Elasticsearch,Kibanaとテストデータをダウンロード"
      get_url: url={{ item }} dest=/tmp
      with_items:
        - https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/{{ elasticsearch_version }}/elasticsearch-{{ elasticsearch_version }}.deb
        - https://download.elastic.co/kibana/kibana/kibana-{{ kibana_version }}-linux-x64.tar.gz
        - https://www.elastic.co/guide/en/kibana/3.0/snippets/shakespeare.json
        - https://github.com/bly2k/files/blob/master/accounts.zip?raw=true
        - https://download.elastic.co/demos/kibana/gettingstarted/logs.jsonl.gz
    - name: "Elasticsearchをdebパッケージからインストール"
      apt: deb=/tmp/elasticsearch-{{ elasticsearch_version }}.deb
    - name: "Elasticsearchを起動してサービスを有効化"
      service: name=elasticsearch state=started enabled=yes
    - name: "Elasticsearchの起動を待つ"
      wait_for: port=9200
    - name: "Kibana4のアーカイブを展開"
      unarchive: copy=no src=/tmp/kibana-{{ kibana_version }}-linux-x64.tar.gz dest=/opt
    - name: "Kibana4の起動スクリプトを転送"
      template: src=templates/kibana.initscript dest=/etc/init.d/kibana mode=755
    - name: "Kibana4を起動してサービスを有効化"
      service: name=kibana state=started enabled=yes
    - name: "テストデータshakespeareのマッピングを転送"
      copy: src=shakespeare_schema.json dest=/tmp
    - name: "テストデータshakespeareのマッピングを作成"
      shell: curl -XPUT http://localhost:9200/shakespeare --data-binary @/tmp/shakespeare_schema.json
    - name: "テストデータshakespeareの投入"
      shell: curl -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @/tmp/shakespeare.json
    - name: "テストデータaccountsの投入"
      shell: cd /tmp && unzip accounts.zip && curl -XPOST 'localhost:9200/bank/accounts/_bulk?pretty' --data-binary @/tmp/accounts.json
    - name: "テストデータlogstashの投入"
      shell: cd /tmp && gunzip logs.jsonl.gz && curl -XPOST 'localhost:9200/_bulk?pretty' --data-binary @/tmp/logs.jsonl
